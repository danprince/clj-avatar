(ns avatar.bitmap
  (:gen-class))

(require '[clojure.string :as string]
         '[cemerick.pprng :as prng])

(defn create-row [width rng & _]
  "Creates a palindromic row of 1s and 0s using the rng."
  (let [half-row (take
                   (/ width 2)
                   (repeatedly #(prng/int rng 2)))]
    (concat half-row (reverse half-row))))

(defn create-bitmap
  "Creates a 2d vector of width by height, that contains a pattern
  of 1s and 0s, generated by a PRNG using the seed argument."
  [seed width height]
    (let [rng (prng/rng seed)]
      (if (odd? width)
        (throw (Exception. "Can't make odd width avatar!"))
        (map
          (partial create-row width rng)
          (range 0 height)))))

(defn bitmap->string
  "Outputs a bitmap as a string for debugging."
  [bitmap]
  (string/join "\n"
    (map
      (partial string/join "")
      bitmap)))

